#include<stdio.h>
#include<sys/types.h>
#include<sys/msg.h>
#include<unistd.h>
#include<string.h>
#include<stdlib.h>
#include<sys/ipc.h>

# define key1 8356
# define key2 2345
#define key3 2456
#define key4 5678
struct mymessage
{ 
   long mtype;
   char mtext[512];
   long pid;
   int group; 
};



int main()
{
int s;
struct mymessage m;
long pid1[10],pid2[10];
int count1=0;
int msgid=msgget(key1,IPC_CREAT|0666);
int i,count2=0;
char a[50];
while(1)
{
m.mtype=5;
if(msgrcv(msgid,&m,sizeof(m)-sizeof(m.mtype),5,IPC_NOWAIT)>0)
{
	if(m.group==1)
	{
	pid1[count1]=m.pid;
	count1++;
	}

	else if(m.group==2)
	{
	pid2[count2]=m.pid;
	count2++;
	}
}
m.mtype=7;
printf("\n************");
if(msgrcv(msgid,&m,sizeof(m)-sizeof(m.mtype),m.mtype,IPC_NOWAIT)>0)
{ 
	//printf("message received\n");
	//printf("To which group u want to send this\n");
	//scanf("%d",&s);
	printf("\n ram");
	if(m.group==1)
	{
		for(i=0;i<count1;i++)
		{
		m.mtype=pid1[i];
		if(pid1[i]!=m.pid)
		msgsnd(msgid,&m,sizeof(m)-sizeof(m.mtype),IPC_NOWAIT);
		}
	}
	else if(m.group==2)
	{
		for(i=0;i<count2;i++)
		{
		m.mtype=pid2[i];
		if(pid2[i]!=m.pid)
		msgsnd(msgid,&m,sizeof(m)-sizeof(m.mtype),IPC_NOWAIT);
		}
	}
}
printf("\n swami");
}
return 0;
}
