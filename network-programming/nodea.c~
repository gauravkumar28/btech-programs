#include <sys/types.h>
  #include <sys/socket.h>
  #include <netinet/in.h>
  #include <arpa/inet.h>
  #include <stdio.h>
  #include <stdlib.h>
  #include <string.h>
  #include <unistd.h>
  #include<sys/select.h>
  /* message format: ip:message */
 int sfd[2];
 //sfd[0] for leader
 //sfd[1] for communicating with a member having the same topology
  int main(int argc,char* argv[])
  {
    struct sockaddr_in sin;
    struct sockaddr_in pin;
    int sfd[0]= socket(AF_INET,SOCK_STREAM,0);
     int sfd[1]= socket(AF_INET,SOCK_STREAM,0);
    if(sfd[0]==-1 || sfd[1]==-1)
    {
    perror("socket failed");
    }
if (argc>2)
            { strcpy(hostname,argv[2]); 
int port=atoi(argv[1]);
}

	
	if ((hp = gethostbyname(hostname)) == 0) {
		perror("gethostbyname");
		exit(1);
	}
        memset(&pin, 0, sizeof(pin));
	pin.sin_family = AF_INET;
	pin.sin_addr.s_addr = ((struct in_addr *)(hp->h_addr))->s_addr;
	pin.sin_port = htons(port);
 if(connect(sfd[0],(struct sockaddr *)&pin,sizeof(pin))==-1)
 {
 perror("connect error");
 }
fd_set rfds;
fd_set readfds;
int retval;
FD_ZERO(&rfds);
FD_SET(sfd[0],&rfds);
FD_SET(sfd[1],&rfds);
readfds=rfds;
int i=0;
for( ; ; )
{
retval=select(1024,&rfds,NULL,NULL,NULL);
for(i=0;i<1024;i++)
{
if(FD_ISSET(i,&rfds))
{
if(i==sfd[0])
{
char buf[200];
recv(i,buf,sizeof(buf),0);
printf("enter the message\n");
scanf("%s",buf);
send(i,buf,sizeof(buf),0);
}
}
}
}
 char buff[20];
 scanf("%s",buff);
 send(sfd,buff,10,0);
 
 close(sfd);
 }

